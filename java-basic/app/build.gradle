/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 */

// Gradle 빌드 도구가 사용할 플러그인 설정
plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    // 실행할 수 있는 자바 애플리케이션을 생성하는 플러그인
    // 이 플러그인을 추가하면 'java' 플러그인이 자동으로 추가된다.
    // 따로 'java' 플러그인을 추가할 필요가 없다.
     id 'application' // main() 메소드가 하나인 단일 프로젝트에서만 사용
    // id 'java'
     // Eclipse IDE 관련 작업을 수행할 수 있는 플러그인
     id 'eclipse'
}

//한글 인코딩 설정
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

// 이 프로젝트에서 사용할 외부 라이브러리를 제공하는 서버를 설정한다.
// 외부 라이브러리 : 다른 개발자가 만든 코드를 담고 있는 파일
repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral() // Maven 사이트에서 제공하는 라이브러리 서버
}

// 이 프로젝트에서 사용할 외부 라이브러리를 지정한다.
// 여기에 다운로드할 외부 라이브러리를 지정한다.
// 빌드할 때 자동으로 위에서 설정한 서버에 가서 라이브러리를 다운로드 해온다.
dependencies {
    // 미디어 파일에서 메타 정보(위도/경도, 해상도 등) 추출
   implementation 'com.drewnoakes:metadata-extractor:2.19.0'
  
  // Spring IoC 컨테이너
  //implementation 'org.springframework:spring-context:6.0.11'

  // @Resource 애노테이션이 들어 있는 API
  //implementation 'javax.annotation:javax.annotation-api:1.3.2'
  
  // Spring JDBC 보조 라이브러리
  // - DataSource 구현체가 들어 있다.
  // implementation 'org.springframework:spring-jdbc:5.3.13'

  // Apache commons-dbcp 라이브러리
  // - DataSource 구현체가 들어 있다.
  // implementation 'commons-dbcp:commons-dbcp:1.4'
   
  // Reflection API를 좀 더 쉽게 사용하게 도와주는 유틸리티
  //implementation 'org.reflections:reflections:0.9.12'

  // Mybatis 퍼시스턴스 프레임워크
  // implementation 'org.mybatis:mybatis:3.5.7'

  // Mybastis를 Spring과 연동할 때 사용할 라이브러리
  // implementation 'org.mybatis:mybatis-spring:2.0.6'

  // MariaDB JDBC 드라이버
  implementation 'org.mariadb.jdbc:mariadb-java-client:3.3.2'

  // Oracle JDBC Driver
  implementation 'com.oracle.database.jdbc:ojdbc11:21.11.0.0'
    
  // MSSQL JDBC Driver
  implementation 'com.microsoft.sqlserver:mssql-jdbc:11.2.3.jre17'
  
  // MySQL JDBC Driver
  implementation 'mysql:mysql-connector-java:8.0.33'
  
  // Google JSON 라이브러리
    implementation 'com.google.code.gson:gson:2.10.1'
  
  // jackson-databind JSON 라이브러리
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'

  // Apache HTTP 통신 라이브러리
  //implementation 'org.apache.httpcomponents.client5:httpclient5:5.0'
  //implementation 'org.apache.httpcomponents.client5:httpclient5-fluent:5.0'

  // AOP 라이브러리
  // implementation 'org.aspectj:aspectjweaver:1.9.9.1'

  // log4j 2.x 라이브러리
  // implementation 'org.apache.logging.log4j:log4j-core:2.14.1'

  // Netty 라이브러리
  // implementation 'io.netty:netty-all:4.1.96.Final'
  
  // Reactor Netty 라이브러리
  //implementation platform('io.projectreactor:reactor-bom:2022.0.9') 
  //implementation 'io.projectreactor.netty:reactor-netty-core' 
  //implementation 'io.projectreactor.netty:reactor-netty-http'
    // Use JUnit Jupiter for testing.
    // 단위 테스트 할 때 사용할 라이브러리
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'

    // 단위 테스트와 관련된 라이브러리
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    // 일반적으로 애플리케이션을 개발할 때 많이 사용하는 라이브러리
    // 구글 개발자들이 만든 라이브러리이다.
    implementation 'com.google.guava:guava:32.1.1-jre'
}

// Apply a specific Java toolchain to ease working on different environments.
// 소스 파일이 어떤 자바 버전으로 되어 있는지 Gradle 에게 알려준다. 
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}


// 'application' 플러그인과 관련된 설정이다.
application {
    // Define the main class for the application.
    mainClass = 'com.eomcs.App' // 'run' 명령을 수행할 때 실행시킬 자바 클래스 이름을 지정
    //mainClass = 'Hello'
}


// 단위 테스트를 수행할 때 사용할 설정
tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform() // 단위 테스트를 수행할 때 JUnit 도구를 사용하도록 지정한다.
}

// 자바 소스를 컴파일 할 때 적용할 옵션
tasks.withType(JavaCompile).configureEach {
    // 프로젝트의 소스 파일 인코딩을 gradle에게 알려준다.
    // $javac -encoding UTF-8 ..
    options.encoding = 'UTF-8' 
    
    
    // 소스 파일을 작성할 때 사용할 자바 버전
    //sourceCompatibility = '21'

    // 자바 클래스를 실행시킬 JVM의 최소 버전
    //targetCompatibility = '21'
}


// eclipse 프로젝트 이름을 설정하기
eclipse {
    project {
        name = "java-basic"
    }
    jdt {
      sourceCompatibility = 21
      targetCompatibility = 21
      javaRuntimeName = "JavaSE-21"
    }
}
